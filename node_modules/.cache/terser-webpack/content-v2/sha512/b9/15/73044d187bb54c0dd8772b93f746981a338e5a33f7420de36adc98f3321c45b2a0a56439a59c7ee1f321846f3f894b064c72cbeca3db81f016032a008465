{"code":"var _self=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(e){var t=/\\blang(?:uage)?-([\\w-]+)\\b/i,n=0,a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof r?new r(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++n}),e.__id},clone:function e(t,n){var r,s,i=a.util.type(t);switch(n=n||{},i){case\"Object\":if(s=a.util.objId(t),n[s])return n[s];for(var l in n[s]=r={},t)t.hasOwnProperty(l)&&(r[l]=e(t[l],n));return r;case\"Array\":return s=a.util.objId(t),n[s]?n[s]:(n[s]=r=[],t.forEach(function(t,a){r[a]=e(t,n)}),r);default:return t}},getLanguage:function(e){for(;e&&!t.test(e.className);)e=e.parentElement;return e?(e.className.match(t)||[,\"none\"])[1].toLowerCase():\"none\"},currentScript:function(){if(\"undefined\"==typeof document)return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(a){var e=(/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(a.stack)||[])[1];if(e){var t=document.getElementsByTagName(\"script\");for(var n in t)if(t[n].src==e)return t[n]}return null}}},languages:{extend:function(e,t){var n=a.util.clone(a.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var s=(r=r||a.languages)[e],i={};for(var l in s)if(s.hasOwnProperty(l)){if(l==t)for(var o in n)n.hasOwnProperty(o)&&(i[o]=n[o]);n.hasOwnProperty(l)||(i[l]=s[l])}var u=r[e];return r[e]=i,a.languages.DFS(a.languages,function(t,n){n===u&&t!=e&&(this[t]=i)}),i},DFS:function e(t,n,r,s){s=s||{};var i=a.util.objId;for(var l in t)if(t.hasOwnProperty(l)){n.call(t,l,t[l],r||l);var o=t[l],u=a.util.type(o);\"Object\"!==u||s[i(o)]?\"Array\"!==u||s[i(o)]||(s[i(o)]=!0,e(o,n,l,s)):(s[i(o)]=!0,e(o,n,null,s))}}},plugins:{},highlightAll:function(e,t){a.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};a.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run(\"before-all-elements-highlight\",r);for(var s,i=0;s=r.elements[i++];)a.highlightElement(s,!0===t,r.callback)},highlightElement:function(n,r,s){var i=a.util.getLanguage(n),l=a.languages[i];n.className=n.className.replace(t,\"\").replace(/\\s+/g,\" \")+\" language-\"+i;var o=n.parentNode;o&&\"pre\"===o.nodeName.toLowerCase()&&(o.className=o.className.replace(t,\"\").replace(/\\s+/g,\" \")+\" language-\"+i);var u={element:n,language:i,grammar:l,code:n.textContent};function c(e){u.highlightedCode=e,a.hooks.run(\"before-insert\",u),u.element.innerHTML=u.highlightedCode,a.hooks.run(\"after-highlight\",u),a.hooks.run(\"complete\",u),s&&s.call(u.element)}if(a.hooks.run(\"before-sanity-check\",u),!u.code)return a.hooks.run(\"complete\",u),void(s&&s.call(u.element));if(a.hooks.run(\"before-highlight\",u),u.grammar)if(r&&e.Worker){var g=new Worker(a.filename);g.onmessage=function(e){c(e.data)},g.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}))}else c(a.highlight(u.code,u.grammar,u.language));else c(a.util.encode(u.code))},highlight:function(e,t,n){var s={code:e,grammar:t,language:n};return a.hooks.run(\"before-tokenize\",s),s.tokens=a.tokenize(s.code,s.grammar),a.hooks.run(\"after-tokenize\",s),r.stringify(a.util.encode(s.tokens),s.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var a in n)t[a]=n[a];delete t.rest}var r=new i;return l(r,r.head,e),s(e,r,t,r.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(r)},hooks:{all:{},add:function(e,t){var n=a.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=a.hooks.all[e];if(n&&n.length)for(var r,s=0;r=n[s++];)r(t)}},Token:r};function r(e,t,n,a,r){this.type=e,this.content=t,this.alias=n,this.length=0|(a||\"\").length,this.greedy=!!r}function s(e,t,n,i,u,c,g){for(var d in n)if(n.hasOwnProperty(d)&&n[d]){var p=n[d];p=Array.isArray(p)?p:[p];for(var f=0;f<p.length;++f){if(g&&g==d+\",\"+f)return;var m=p[f],h=m.inside,v=!!m.lookbehind,y=!!m.greedy,b=0,F=m.alias;if(y&&!m.pattern.global){var k=m.pattern.toString().match(/[imsuy]*$/)[0];m.pattern=RegExp(m.pattern.source,k+\"g\")}m=m.pattern||m;for(var w=i.next,x=u;w!==t.tail;x+=w.value.length,w=w.next){var A=w.value;if(t.length>e.length)return;if(!(A instanceof r)){var P=1;if(y&&w!=t.tail.prev){if(m.lastIndex=x,!(E=m.exec(e)))break;var S=E.index+(v&&E[1]?E[1].length:0),$=E.index+E[0].length,_=x;for(_+=w.value.length;S>=_;)_+=(w=w.next).value.length;if(x=_-=w.value.length,w.value instanceof r)continue;for(var j=w;j!==t.tail&&(_<$||\"string\"==typeof j.value&&!j.prev.value.greedy);j=j.next)P++,_+=j.value.length;P--,A=e.slice(x,_),E.index-=x}else{m.lastIndex=0;var E=m.exec(A)}if(E){v&&(b=E[1]?E[1].length:0),$=(S=E.index+b)+(E=E[0].slice(b)).length;var C=A.slice(0,S),N=A.slice($),O=w.prev;if(C&&(O=l(t,O,C),x+=C.length),o(t,O,P),w=l(t,O,new r(d,h?a.tokenize(E,h):E,F,E,y)),N&&l(t,w,N),P>1&&s(e,t,n,w.prev,x,!0,d+\",\"+f),c)break}else if(c)break}}}}}function i(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function l(e,t,n){var a=t.next,r={value:n,prev:t,next:a};return t.next=r,a.prev=r,e.length++,r}function o(e,t,n){for(var a=t.next,r=0;r<n&&a!==e.tail;r++)a=a.next;t.next=a,a.prev=t,e.length-=r}if(e.Prism=a,r.stringify=function e(t,n){if(\"string\"==typeof t)return t;if(Array.isArray(t)){var r=\"\";return t.forEach(function(t){r+=e(t,n)}),r}var s={type:t.type,content:e(t.content,n),tag:\"span\",classes:[\"token\",t.type],attributes:{},language:n},i=t.alias;i&&(Array.isArray(i)?Array.prototype.push.apply(s.classes,i):s.classes.push(i)),a.hooks.run(\"wrap\",s);var l=\"\";for(var o in s.attributes)l+=\" \"+o+'=\"'+(s.attributes[o]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+s.tag+' class=\"'+s.classes.join(\" \")+'\"'+l+\">\"+s.content+\"</\"+s.tag+\">\"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener(\"message\",function(t){var n=JSON.parse(t.data),r=n.language,s=n.immediateClose;e.postMessage(a.highlight(n.code,a.languages[r],r)),s&&e.close()},!1),a):a;var u=a.util.currentScript();function c(){a.manual||a.highlightAll()}if(u&&(a.filename=u.src,u.hasAttribute(\"data-manual\")&&(a.manual=!0)),!a.manual){var g=document.readyState;\"loading\"===g||\"interactive\"===g&&u&&u.defer?document.addEventListener(\"DOMContentLoaded\",c):window.requestAnimationFrame?window.requestAnimationFrame(c):window.setTimeout(c,16)}return a}(_self);\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism),\"undefined\"!=typeof global&&(global.Prism=Prism),Prism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,greedy:!0},cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.hooks.add(\"wrap\",function(e){\"entity\"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,\"&\"))}),Object.defineProperty(Prism.languages.markup.tag,\"addInlined\",{value:function(e,t){var n={};n[\"language-\"+t]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:Prism.languages[t]},n.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var a={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:n}};a[\"language-\"+t]={pattern:/[\\s\\S]+/,inside:Prism.languages[t]};var r={};r[e]={pattern:RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,function(){return e}),\"i\"),lookbehind:!0,greedy:!0,inside:a},Prism.languages.insertBefore(\"markup\",\"cdata\",r)}}),Prism.languages.xml=Prism.languages.extend(\"markup\",{}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,function(e){var t=/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;e.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"}}},url:{pattern:RegExp(\"url\\\\((?:\"+t.source+\"|[^\\n\\r()]*)\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/}},selector:RegExp(\"[^{}\\\\s](?:[^{};\\\"']|\"+t.source+\")*?(?=\\\\s*\\\\{)\"),string:{pattern:t,greedy:!0},property:/[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,important:/!important\\b/i,function:/[-a-z0-9]+(?=\\()/i,punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined(\"style\",\"css\"),e.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:n.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:e.languages.css}},alias:\"language-css\"}},n.tag))}(Prism),Prism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,boolean:/\\b(?:true|false)\\b/,function:/\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/},Prism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\\s*)(?:catch|finally)\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],number:/\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,function:/#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,operator:/--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\${|}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.js=Prism.languages.javascript,\"undefined\"!=typeof self&&self.Prism&&self.document&&document.querySelector&&(self.Prism.fileHighlight=function(e){e=e||document;var t={js:\"javascript\",py:\"python\",rb:\"ruby\",ps1:\"powershell\",psm1:\"powershell\",sh:\"bash\",bat:\"batch\",h:\"c\",tex:\"latex\"};Array.prototype.slice.call(e.querySelectorAll(\"pre[data-src]\")).forEach(function(e){if(!e.hasAttribute(\"data-src-loaded\")){for(var n,a=e.getAttribute(\"data-src\"),r=e,s=/\\blang(?:uage)?-([\\w-]+)\\b/i;r&&!s.test(r.className);)r=r.parentNode;if(r&&(n=(e.className.match(s)||[,\"\"])[1]),!n){var i=(a.match(/\\.(\\w+)$/)||[,\"\"])[1];n=t[i]||i}var l=document.createElement(\"code\");l.className=\"language-\"+n,e.textContent=\"\",l.textContent=\"Loading…\",e.appendChild(l);var o=new XMLHttpRequest;o.open(\"GET\",a,!0),o.onreadystatechange=function(){4==o.readyState&&(o.status<400&&o.responseText?(l.textContent=o.responseText,Prism.highlightElement(l),e.setAttribute(\"data-src-loaded\",\"\")):l.textContent=o.status>=400?\"✖ Error \"+o.status+\" while fetching file: \"+o.statusText:\"✖ Error: File does not exist or is empty\")},o.send(null)}})},document.addEventListener(\"DOMContentLoaded\",function(){self.Prism.fileHighlight()})),Prism.languages.typescript=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,builtin:/\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/}),Prism.languages.ts=Prism.languages.typescript;","name":"scripts.0b4992e20496e0e12d97.js","input":"\r\n/* **********************************************\r\n     Begin prism-core.js\r\n********************************************** */\r\n\r\nvar _self = (typeof window !== 'undefined')\r\n\t? window   // if in browser\r\n\t: (\r\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\r\n\t\t? self // if in worker\r\n\t\t: {}   // if in node js\r\n\t);\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n\r\nvar Prism = (function (_self){\r\n\r\n// Private helper vars\r\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\r\nvar uniqueId = 0;\r\n\r\n\r\nvar _ = {\r\n\tmanual: _self.Prism && _self.Prism.manual,\r\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\r\n\tutil: {\r\n\t\tencode: function encode(tokens) {\r\n\t\t\tif (tokens instanceof Token) {\r\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\r\n\t\t\t} else if (Array.isArray(tokens)) {\r\n\t\t\t\treturn tokens.map(encode);\r\n\t\t\t} else {\r\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttype: function (o) {\r\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\r\n\t\t},\r\n\r\n\t\tobjId: function (obj) {\r\n\t\t\tif (!obj['__id']) {\r\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\r\n\t\t\t}\r\n\t\t\treturn obj['__id'];\r\n\t\t},\r\n\r\n\t\t// Deep clone a language definition (e.g. to extend it)\r\n\t\tclone: function deepClone(o, visited) {\r\n\t\t\tvar clone, id, type = _.util.type(o);\r\n\t\t\tvisited = visited || {};\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'Object':\r\n\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclone = {};\r\n\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\tfor (var key in o) {\r\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn clone;\r\n\r\n\t\t\t\tcase 'Array':\r\n\t\t\t\t\tid = _.util.objId(o);\r\n\t\t\t\t\tif (visited[id]) {\r\n\t\t\t\t\t\treturn visited[id];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclone = [];\r\n\t\t\t\t\tvisited[id] = clone;\r\n\r\n\t\t\t\t\to.forEach(function (v, i) {\r\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn clone;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn o;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\r\n\t\t *\r\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\r\n\t\t *\r\n\t\t * @param {Element} element\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tgetLanguage: function (element) {\r\n\t\t\twhile (element && !lang.test(element.className)) {\r\n\t\t\t\telement = element.parentElement;\r\n\t\t\t}\r\n\t\t\tif (element) {\r\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\r\n\t\t\t}\r\n\t\t\treturn 'none';\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the script element that is currently executing.\r\n\t\t *\r\n\t\t * This does __not__ work for line script element.\r\n\t\t *\r\n\t\t * @returns {HTMLScriptElement | null}\r\n\t\t */\r\n\t\tcurrentScript: function () {\r\n\t\t\tif (typeof document === 'undefined') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif ('currentScript' in document) {\r\n\t\t\t\treturn document.currentScript;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 workaround\r\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\r\n\t\t\t// this will not work for inline scripts\r\n\r\n\t\t\ttry {\r\n\t\t\t\tthrow new Error();\r\n\t\t\t} catch (err) {\r\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\r\n\t\t\t\t// A stack will look like this:\r\n\t\t\t\t//\r\n\t\t\t\t// Error\r\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\r\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\r\n\r\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\r\n\t\t\t\tif (src) {\r\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\r\n\t\t\t\t\tfor (var i in scripts) {\r\n\t\t\t\t\t\tif (scripts[i].src == src) {\r\n\t\t\t\t\t\t\treturn scripts[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tlanguages: {\r\n\t\textend: function (id, redef) {\r\n\t\t\tvar lang = _.util.clone(_.languages[id]);\r\n\r\n\t\t\tfor (var key in redef) {\r\n\t\t\t\tlang[key] = redef[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn lang;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Insert a token before another token in a language literal\r\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n\t\t * we cannot just provide an object, we need an object and a key.\r\n\t\t * @param inside The key (or language id) of the parent\r\n\t\t * @param before The key to insert before.\r\n\t\t * @param insert Object with the key/value pairs to insert\r\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n\t\t */\r\n\t\tinsertBefore: function (inside, before, insert, root) {\r\n\t\t\troot = root || _.languages;\r\n\t\t\tvar grammar = root[inside];\r\n\t\t\tvar ret = {};\r\n\r\n\t\t\tfor (var token in grammar) {\r\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\r\n\r\n\t\t\t\t\tif (token == before) {\r\n\t\t\t\t\t\tfor (var newToken in insert) {\r\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\r\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\r\n\t\t\t\t\t\tret[token] = grammar[token];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar old = root[inside];\r\n\t\t\troot[inside] = ret;\r\n\r\n\t\t\t// Update references in other language definitions\r\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\r\n\t\t\t\tif (value === old && key != inside) {\r\n\t\t\t\t\tthis[key] = ret;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t// Traverse a language definition with Depth First Search\r\n\t\tDFS: function DFS(o, callback, type, visited) {\r\n\t\t\tvisited = visited || {};\r\n\r\n\t\t\tvar objId = _.util.objId;\r\n\r\n\t\t\tfor (var i in o) {\r\n\t\t\t\tif (o.hasOwnProperty(i)) {\r\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\r\n\r\n\t\t\t\t\tvar property = o[i],\r\n\t\t\t\t\t    propertyType = _.util.type(property);\r\n\r\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\r\n\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\tDFS(property, callback, null, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\r\n\t\t\t\t\t\tvisited[objId(property)] = true;\r\n\t\t\t\t\t\tDFS(property, callback, i, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tplugins: {},\r\n\r\n\thighlightAll: function(async, callback) {\r\n\t\t_.highlightAllUnder(document, async, callback);\r\n\t},\r\n\r\n\thighlightAllUnder: function(container, async, callback) {\r\n\t\tvar env = {\r\n\t\t\tcallback: callback,\r\n\t\t\tcontainer: container,\r\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\r\n\t\t};\r\n\r\n\t\t_.hooks.run('before-highlightall', env);\r\n\r\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\r\n\r\n\t\t_.hooks.run('before-all-elements-highlight', env);\r\n\r\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\r\n\t\t\t_.highlightElement(element, async === true, env.callback);\r\n\t\t}\r\n\t},\r\n\r\n\thighlightElement: function(element, async, callback) {\r\n\t\t// Find language\r\n\t\tvar language = _.util.getLanguage(element);\r\n\t\tvar grammar = _.languages[language];\r\n\r\n\t\t// Set language on the element, if not present\r\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n\t\t// Set language on the parent, for styling\r\n\t\tvar parent = element.parentNode;\r\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\r\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\t\t}\r\n\r\n\t\tvar code = element.textContent;\r\n\r\n\t\tvar env = {\r\n\t\t\telement: element,\r\n\t\t\tlanguage: language,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tcode: code\r\n\t\t};\r\n\r\n\t\tfunction insertHighlightedCode(highlightedCode) {\r\n\t\t\tenv.highlightedCode = highlightedCode;\r\n\r\n\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\tcallback && callback.call(env.element);\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-sanity-check', env);\r\n\r\n\t\tif (!env.code) {\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\tcallback && callback.call(env.element);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-highlight', env);\r\n\r\n\t\tif (!env.grammar) {\r\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (async && _self.Worker) {\r\n\t\t\tvar worker = new Worker(_.filename);\r\n\r\n\t\t\tworker.onmessage = function(evt) {\r\n\t\t\t\tinsertHighlightedCode(evt.data);\r\n\t\t\t};\r\n\r\n\t\t\tworker.postMessage(JSON.stringify({\r\n\t\t\t\tlanguage: env.language,\r\n\t\t\t\tcode: env.code,\r\n\t\t\t\timmediateClose: true\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\r\n\t\t}\r\n\t},\r\n\r\n\thighlight: function (text, grammar, language) {\r\n\t\tvar env = {\r\n\t\t\tcode: text,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tlanguage: language\r\n\t\t};\r\n\t\t_.hooks.run('before-tokenize', env);\r\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\r\n\t\t_.hooks.run('after-tokenize', env);\r\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\r\n\t},\r\n\r\n\ttokenize: function(text, grammar) {\r\n\t\tvar rest = grammar.rest;\r\n\t\tif (rest) {\r\n\t\t\tfor (var token in rest) {\r\n\t\t\t\tgrammar[token] = rest[token];\r\n\t\t\t}\r\n\r\n\t\t\tdelete grammar.rest;\r\n\t\t}\r\n\r\n\t\tvar tokenList = new LinkedList();\r\n\t\taddAfter(tokenList, tokenList.head, text);\r\n\r\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\r\n\r\n\t\treturn toArray(tokenList);\r\n\t},\r\n\r\n\thooks: {\r\n\t\tall: {},\r\n\r\n\t\tadd: function (name, callback) {\r\n\t\t\tvar hooks = _.hooks.all;\r\n\r\n\t\t\thooks[name] = hooks[name] || [];\r\n\r\n\t\t\thooks[name].push(callback);\r\n\t\t},\r\n\r\n\t\trun: function (name, env) {\r\n\t\t\tvar callbacks = _.hooks.all[name];\r\n\r\n\t\t\tif (!callbacks || !callbacks.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\r\n\t\t\t\tcallback(env);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tToken: Token\r\n};\r\n\r\n_self.Prism = _;\r\n\r\nfunction Token(type, content, alias, matchedStr, greedy) {\r\n\tthis.type = type;\r\n\tthis.content = content;\r\n\tthis.alias = alias;\r\n\t// Copy of the full string this token was created from\r\n\tthis.length = (matchedStr || '').length|0;\r\n\tthis.greedy = !!greedy;\r\n}\r\n\r\nToken.stringify = function stringify(o, language) {\r\n\tif (typeof o == 'string') {\r\n\t\treturn o;\r\n\t}\r\n\tif (Array.isArray(o)) {\r\n\t\tvar s = '';\r\n\t\to.forEach(function (e) {\r\n\t\t\ts += stringify(e, language);\r\n\t\t});\r\n\t\treturn s;\r\n\t}\r\n\r\n\tvar env = {\r\n\t\ttype: o.type,\r\n\t\tcontent: stringify(o.content, language),\r\n\t\ttag: 'span',\r\n\t\tclasses: ['token', o.type],\r\n\t\tattributes: {},\r\n\t\tlanguage: language\r\n\t};\r\n\r\n\tvar aliases = o.alias;\r\n\tif (aliases) {\r\n\t\tif (Array.isArray(aliases)) {\r\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\r\n\t\t} else {\r\n\t\t\tenv.classes.push(aliases);\r\n\t\t}\r\n\t}\r\n\r\n\t_.hooks.run('wrap', env);\r\n\r\n\tvar attributes = '';\r\n\tfor (var name in env.attributes) {\r\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\r\n\t}\r\n\r\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\r\n};\r\n\r\n/**\r\n * @param {string} text\r\n * @param {LinkedList<string | Token>} tokenList\r\n * @param {any} grammar\r\n * @param {LinkedListNode<string | Token>} startNode\r\n * @param {number} startPos\r\n * @param {boolean} [oneshot=false]\r\n * @param {string} [target]\r\n */\r\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, oneshot, target) {\r\n\tfor (var token in grammar) {\r\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvar patterns = grammar[token];\r\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\r\n\r\n\t\tfor (var j = 0; j < patterns.length; ++j) {\r\n\t\t\tif (target && target == token + ',' + j) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar pattern = patterns[j],\r\n\t\t\t\tinside = pattern.inside,\r\n\t\t\t\tlookbehind = !!pattern.lookbehind,\r\n\t\t\t\tgreedy = !!pattern.greedy,\r\n\t\t\t\tlookbehindLength = 0,\r\n\t\t\t\talias = pattern.alias;\r\n\r\n\t\t\tif (greedy && !pattern.pattern.global) {\r\n\t\t\t\t// Without the global flag, lastIndex won't work\r\n\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\r\n\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\r\n\t\t\t}\r\n\r\n\t\t\tpattern = pattern.pattern || pattern;\r\n\r\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\r\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\r\n\t\t\t\tcurrentNode !== tokenList.tail;\r\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\r\n\t\t\t) {\r\n\r\n\t\t\t\tvar str = currentNode.value;\r\n\r\n\t\t\t\tif (tokenList.length > text.length) {\r\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (str instanceof Token) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\r\n\r\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\r\n\t\t\t\t\tpattern.lastIndex = pos;\r\n\t\t\t\t\tvar match = pattern.exec(text);\r\n\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\r\n\t\t\t\t\tvar to = match.index + match[0].length;\r\n\t\t\t\t\tvar p = pos;\r\n\r\n\t\t\t\t\t// find the node that contains the match\r\n\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\twhile (from >= p) {\r\n\t\t\t\t\t\tcurrentNode = currentNode.next;\r\n\t\t\t\t\t\tp += currentNode.value.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// adjust pos (and p)\r\n\t\t\t\t\tp -= currentNode.value.length;\r\n\t\t\t\t\tpos = p;\r\n\r\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\r\n\t\t\t\t\tif (currentNode.value instanceof Token) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// find the last node which is affected by this match\r\n\t\t\t\t\tfor (\r\n\t\t\t\t\t\tvar k = currentNode;\r\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || (typeof k.value === 'string' && !k.prev.value.greedy));\r\n\t\t\t\t\t\tk = k.next\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tremoveCount++;\r\n\t\t\t\t\t\tp += k.value.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tremoveCount--;\r\n\r\n\t\t\t\t\t// replace with the new match\r\n\t\t\t\t\tstr = text.slice(pos, p);\r\n\t\t\t\t\tmatch.index -= pos;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpattern.lastIndex = 0;\r\n\r\n\t\t\t\t\tvar match = pattern.exec(str);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!match) {\r\n\t\t\t\t\tif (oneshot) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (lookbehind) {\r\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar from = match.index + lookbehindLength,\r\n\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\r\n\t\t\t\t\tto = from + match.length,\r\n\t\t\t\t\tbefore = str.slice(0, from),\r\n\t\t\t\t\tafter = str.slice(to);\r\n\r\n\t\t\t\tvar removeFrom = currentNode.prev;\r\n\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\r\n\t\t\t\t\tpos += before.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\r\n\r\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\r\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\r\n\r\n\t\t\t\tif (after) {\r\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (removeCount > 1)\r\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, true, token + ',' + j);\r\n\r\n\t\t\t\tif (oneshot)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @typedef LinkedListNode\r\n * @property {T} value\r\n * @property {LinkedListNode<T> | null} prev The previous node.\r\n * @property {LinkedListNode<T> | null} next The next node.\r\n * @template T\r\n */\r\n\r\n/**\r\n * @template T\r\n */\r\nfunction LinkedList() {\r\n\t/** @type {LinkedListNode<T>} */\r\n\tvar head = { value: null, prev: null, next: null };\r\n\t/** @type {LinkedListNode<T>} */\r\n\tvar tail = { value: null, prev: head, next: null };\r\n\thead.next = tail;\r\n\r\n\t/** @type {LinkedListNode<T>} */\r\n\tthis.head = head;\r\n\t/** @type {LinkedListNode<T>} */\r\n\tthis.tail = tail;\r\n\tthis.length = 0;\r\n}\r\n\r\n/**\r\n * Adds a new node with the given value to the list.\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {T} value\r\n * @returns {LinkedListNode<T>} The added node.\r\n * @template T\r\n */\r\nfunction addAfter(list, node, value) {\r\n\t// assumes that node != list.tail && values.length >= 0\r\n\tvar next = node.next;\r\n\r\n\tvar newNode = { value: value, prev: node, next: next };\r\n\tnode.next = newNode;\r\n\tnext.prev = newNode;\r\n\tlist.length++;\r\n\r\n\treturn newNode;\r\n}\r\n/**\r\n * Removes `count` nodes after the given node. The given node will not be removed.\r\n * @param {LinkedList<T>} list\r\n * @param {LinkedListNode<T>} node\r\n * @param {number} count\r\n * @template T\r\n */\r\nfunction removeRange(list, node, count) {\r\n\tvar next = node.next;\r\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\r\n\t\tnext = next.next;\r\n\t}\r\n\tnode.next = next;\r\n\tnext.prev = node;\r\n\tlist.length -= i;\r\n}\r\n/**\r\n * @param {LinkedList<T>} list\r\n * @returns {T[]}\r\n * @template T\r\n */\r\nfunction toArray(list) {\r\n\tvar array = [];\r\n\tvar node = list.head.next;\r\n\twhile (node !== list.tail) {\r\n\t\tarray.push(node.value);\r\n\t\tnode = node.next;\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n\r\nif (!_self.document) {\r\n\tif (!_self.addEventListener) {\r\n\t\t// in Node.js\r\n\t\treturn _;\r\n\t}\r\n\r\n\tif (!_.disableWorkerMessageHandler) {\r\n\t\t// In worker\r\n\t\t_self.addEventListener('message', function (evt) {\r\n\t\t\tvar message = JSON.parse(evt.data),\r\n\t\t\t\tlang = message.language,\r\n\t\t\t\tcode = message.code,\r\n\t\t\t\timmediateClose = message.immediateClose;\r\n\r\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\r\n\t\t\tif (immediateClose) {\r\n\t\t\t\t_self.close();\r\n\t\t\t}\r\n\t\t}, false);\r\n\t}\r\n\r\n\treturn _;\r\n}\r\n\r\n//Get current script and highlight\r\nvar script = _.util.currentScript();\r\n\r\nif (script) {\r\n\t_.filename = script.src;\r\n\r\n\tif (script.hasAttribute('data-manual')) {\r\n\t\t_.manual = true;\r\n\t}\r\n}\r\n\r\nfunction highlightAutomaticallyCallback() {\r\n\tif (!_.manual) {\r\n\t\t_.highlightAll();\r\n\t}\r\n}\r\n\r\nif (!_.manual) {\r\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\r\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\r\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\r\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\r\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\r\n\t// See https://github.com/PrismJS/prism/issues/2102\r\n\tvar readyState = document.readyState;\r\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\r\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\r\n\t} else {\r\n\t\tif (window.requestAnimationFrame) {\r\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nreturn _;\r\n\r\n})(_self);\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\tmodule.exports = Prism;\r\n}\r\n\r\n// hack for components to work correctly in node.js\r\nif (typeof global !== 'undefined') {\r\n\tglobal.Prism = Prism;\r\n}\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-markup.js\r\n********************************************** */\r\n\r\nPrism.languages.markup = {\r\n\t'comment': /<!--[\\s\\S]*?-->/,\r\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\r\n\t'doctype': {\r\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\r\n\t\tgreedy: true\r\n\t},\r\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\r\n\t'tag': {\r\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/,\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'attr-value': {\r\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': [\r\n\t\t\t\t\t\t/^=/,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\r\n\t\t\t\t\t\t\tlookbehind: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\/?>/,\r\n\t\t\t'attr-name': {\r\n\t\t\t\tpattern: /[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\t'entity': /&#?[\\da-z]{1,8};/i\r\n};\r\n\r\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\r\n\tPrism.languages.markup['entity'];\r\n\r\n// Plugin to make entity title show the real entity, idea by Roman Komarov\r\nPrism.hooks.add('wrap', function(env) {\r\n\r\n\tif (env.type === 'entity') {\r\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t}\r\n});\r\n\r\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\r\n\t/**\r\n\t * Adds an inlined language to markup.\r\n\t *\r\n\t * An example of an inlined language is CSS with `<style>` tags.\r\n\t *\r\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\r\n\t * case insensitive.\r\n\t * @param {string} lang The language key.\r\n\t * @example\r\n\t * addInlined('style', 'css');\r\n\t */\r\n\tvalue: function addInlined(tagName, lang) {\r\n\t\tvar includedCdataInside = {};\r\n\t\tincludedCdataInside['language-' + lang] = {\r\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\r\n\r\n\t\tvar inside = {\r\n\t\t\t'included-cdata': {\r\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\r\n\t\t\t\tinside: includedCdataInside\r\n\t\t\t}\r\n\t\t};\r\n\t\tinside['language-' + lang] = {\r\n\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\tinside: Prism.languages[lang]\r\n\t\t};\r\n\r\n\t\tvar def = {};\r\n\t\tdef[tagName] = {\r\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: inside\r\n\t\t};\r\n\r\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\r\n\t}\r\n});\r\n\r\nPrism.languages.xml = Prism.languages.extend('markup', {});\r\nPrism.languages.html = Prism.languages.markup;\r\nPrism.languages.mathml = Prism.languages.markup;\r\nPrism.languages.svg = Prism.languages.markup;\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-css.js\r\n********************************************** */\r\n\r\n(function (Prism) {\r\n\r\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\r\n\r\n\tPrism.languages.css = {\r\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\r\n\t\t'atrule': {\r\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\r\n\t\t\tinside: {\r\n\t\t\t\t'rule': /^@[\\w-]+/,\r\n\t\t\t\t'selector-function-argument': {\r\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'selector'\r\n\t\t\t\t}\r\n\t\t\t\t// See rest below\r\n\t\t\t}\r\n\t\t},\r\n\t\t'url': {\r\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'function': /^url/i,\r\n\t\t\t\t'punctuation': /^\\(|\\)$/\r\n\t\t\t}\r\n\t\t},\r\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\r\n\t\t'string': {\r\n\t\t\tpattern: string,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\r\n\t\t'important': /!important\\b/i,\r\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\r\n\t\t'punctuation': /[(){};:,]/\r\n\t};\r\n\r\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\r\n\r\n\tvar markup = Prism.languages.markup;\r\n\tif (markup) {\r\n\t\tmarkup.tag.addInlined('style', 'css');\r\n\r\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\r\n\t\t\t'style-attr': {\r\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'attr-name': {\r\n\t\t\t\t\t\tpattern: /^\\s*style/i,\r\n\t\t\t\t\t\tinside: markup.tag.inside\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\r\n\t\t\t\t\t'attr-value': {\r\n\t\t\t\t\t\tpattern: /.+/i,\r\n\t\t\t\t\t\tinside: Prism.languages.css\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\talias: 'language-css'\r\n\t\t\t}\r\n\t\t}, markup.tag);\r\n\t}\r\n\r\n}(Prism));\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-clike.js\r\n********************************************** */\r\n\r\nPrism.languages.clike = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[.\\\\]/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n\t'boolean': /\\b(?:true|false)\\b/,\r\n\t'function': /\\w+(?=\\()/,\r\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\r\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-javascript.js\r\n********************************************** */\r\n\r\nPrism.languages.javascript = Prism.languages.extend('clike', {\r\n\t'class-name': [\r\n\t\tPrism.languages.clike['class-name'],\r\n\t\t{\r\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'keyword': [\r\n\t\t{\r\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t],\r\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\r\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\r\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\r\n});\r\n\r\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\r\n\r\nPrism.languages.insertBefore('javascript', 'keyword', {\r\n\t'regex': {\r\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\r\n\t'function-variable': {\r\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'parameter': [\r\n\t\t{\r\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript\r\n\t\t}\r\n\t],\r\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'string', {\r\n\t'template-string': {\r\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'template-punctuation': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'string'\r\n\t\t\t},\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^\\${|}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\r\n}\r\n\r\nPrism.languages.js = Prism.languages.javascript;\r\n\r\n\r\n/* **********************************************\r\n     Begin prism-file-highlight.js\r\n********************************************** */\r\n\r\n(function () {\r\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @param {Element} [container=document]\r\n\t */\r\n\tself.Prism.fileHighlight = function(container) {\r\n\t\tcontainer = container || document;\r\n\r\n\t\tvar Extensions = {\r\n\t\t\t'js': 'javascript',\r\n\t\t\t'py': 'python',\r\n\t\t\t'rb': 'ruby',\r\n\t\t\t'ps1': 'powershell',\r\n\t\t\t'psm1': 'powershell',\r\n\t\t\t'sh': 'bash',\r\n\t\t\t'bat': 'batch',\r\n\t\t\t'h': 'c',\r\n\t\t\t'tex': 'latex'\r\n\t\t};\r\n\r\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\r\n\t\t\t// ignore if already loaded\r\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// load current\r\n\t\t\tvar src = pre.getAttribute('data-src');\r\n\r\n\t\t\tvar language, parent = pre;\r\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\r\n\t\t\twhile (parent && !lang.test(parent.className)) {\r\n\t\t\t\tparent = parent.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif (parent) {\r\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\r\n\t\t\t}\r\n\r\n\t\t\tif (!language) {\r\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\r\n\t\t\t\tlanguage = Extensions[extension] || extension;\r\n\t\t\t}\r\n\r\n\t\t\tvar code = document.createElement('code');\r\n\t\t\tcode.className = 'language-' + language;\r\n\r\n\t\t\tpre.textContent = '';\r\n\r\n\t\t\tcode.textContent = 'Loading…';\r\n\r\n\t\t\tpre.appendChild(code);\r\n\r\n\t\t\tvar xhr = new XMLHttpRequest();\r\n\r\n\t\t\txhr.open('GET', src, true);\r\n\r\n\t\t\txhr.onreadystatechange = function () {\r\n\t\t\t\tif (xhr.readyState == 4) {\r\n\r\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\r\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\r\n\r\n\t\t\t\t\t\tPrism.highlightElement(code);\r\n\t\t\t\t\t\t// mark as loaded\r\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (xhr.status >= 400) {\r\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\txhr.send(null);\r\n\t\t});\r\n\t};\r\n\r\n\tdocument.addEventListener('DOMContentLoaded', function () {\r\n\t\t// execute inside handler, for dropping Event as argument\r\n\t\tself.Prism.fileHighlight();\r\n\t});\r\n\r\n})();\r\n\n;Prism.languages.typescript = Prism.languages.extend('javascript', {\r\n\t// From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\r\n\t'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\r\n\t'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\r\n});\r\n\r\nPrism.languages.ts = Prism.languages.typescript;\r\n\n;","inputSourceMap":null}